<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd"
       default-lazy-init="false">
    <!--启用注解扫描,不然@Resource,@AutoWrite等标签依赖注入有问题
    use-default-filters="false" 只扫描属性注解@Resource,@AutoWrite等,忽略类注解@controller @Service等
    use-default-filters="true" 会扫描base-package下的所有注解-->
    <context:component-scan base-package="com.doctor"></context:component-scan>

    <!-- 配置静态资源，否则打开html会出现404 -->
    <mvc:resources location="/doctor/" mapping="/doctor/**"/>
    <mvc:resources location="/html/" mapping="/html/**"/>

    <!-- springMVC的视图转换器，否则@Response转换对象会出错，另外MappingJackson2HttpMessageConverter需要依赖json包 -->
    <bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
    <mvc:annotation-driven>
        <mvc:message-converters>
            <ref bean="mappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />-->

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>



    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:my.properties</value>
            </list>
        </property>
    </bean>

    <!-- 导入mybatis配置 -->
    <import resource="classpath*:mybatis/spring-mybatis.xml" />

    <!--<mvc:interceptors>
    <mvc:interceptor>
        <mvc:mapping path="/**"/>
        <bean class="com.shinemo.mgyl.bops.base.interceptor.ArTokenInterceptor"/>
    </mvc:interceptor>
    </mvc:interceptors>-->

</beans>
